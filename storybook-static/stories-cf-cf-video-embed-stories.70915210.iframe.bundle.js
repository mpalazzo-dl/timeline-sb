"use strict";(self.webpackChunkaces_maverick=self.webpackChunkaces_maverick||[]).push([[196],{"./src/stories/cf/cf-video-embed.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{VideoEmbed:()=>VideoEmbed,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_maverick_cf__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/libs/cf/index.ts");const data_sys={id:"6PI6ArmdlntKHSb40dRQF1",__typename:"Sys"},data___typename="VideoEmbed",data_internalTitle="Test Video",__WEBPACK_DEFAULT_EXPORT__={title:"CF/Video Embed",component:_maverick_cf__WEBPACK_IMPORTED_MODULE_1__.q,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{embedCode:{control:{type:"text"}},id:{table:{disable:!0}},lang:{table:{disable:!0}},preview:{table:{disable:!0}},__typename:{table:{disable:!0}},internalTitle:{table:{disable:!0}},sys:{table:{disable:!0}},nested:{table:{disable:!0}},marginBottom:{table:{disable:!0}}},args:{embedCode:'<iframe width="560" height="315" src="https://www.youtube.com/embed/mlH4EbImsDw?si=JtpD8C0fFlhlr4Ir" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>',nested:!1,id:data_sys.id,lang:"en-US",preview:!1}},VideoEmbed={render:({embedCode,nested,id,lang,preview})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_maverick_cf__WEBPACK_IMPORTED_MODULE_1__.q,{internalTitle:data_internalTitle,embedCode,nested,__typename:data___typename,id,lang,preview})},__namedExportsOrder=["VideoEmbed"];VideoEmbed.parameters={...VideoEmbed.parameters,docs:{...VideoEmbed.parameters?.docs,source:{originalSource:"{\n  render({\n    embedCode,\n    nested,\n    id,\n    lang,\n    preview\n  }: CfVideoEmbedProps) {\n    return <CfVideoEmbed internalTitle={data.internalTitle} embedCode={embedCode} nested={nested} __typename={data.__typename} id={id} lang={lang} preview={preview} />;\n  }\n}",...VideoEmbed.parameters?.docs?.source}}}}}]);